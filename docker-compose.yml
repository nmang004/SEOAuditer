version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rival-outranker-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:4000
    depends_on:
      - backend
    networks:
      - rival-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rival-outranker-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rival_outranker?schema=public
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_here
      - JWT_EXPIRES_IN=1d
    depends_on:
      - postgres
      - redis
    networks:
      - rival-network

  # Database Service
  postgres:
    image: postgres:15
    container_name: rival-outranker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rival_outranker
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - rival-network

  # Redis Service
  redis:
    image: redis:7
    container_name: rival-outranker-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - rival-network

# Volumes
volumes:
  pgdata:


# Networks
networks:
  rival-network:
    driver: bridge